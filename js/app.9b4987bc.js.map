{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/TrelloToScrumblr.vue?5067","webpack:///./src/App.vue?eaa0","webpack:///./src/App.vue","webpack:///./src/components/TrelloToScrumblr.vue","webpack:///./src/services/WebFileService.ts","webpack:///./src/services/TrelloToScrumblrService.ts","webpack:///./src/components/TrelloToScrumblr.vue?7b70","webpack:///./src/components/TrelloToScrumblr.vue?fb2f","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","href","target","type","ref","selectedTrelloFile","trelloExport","exportLists","exportList","list","id","export","cardsInList","selectedScrumblrFile","scrumblrExport","deletedCardsPolicy","downloadScrumblrExport","text","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","fileInput","files","Promise","reject","file","reader","FileReader","readAsText","resolve","onload","evt","JSON","parse","e","webFileService","cards","columns","theme","size","width","height","json","parseError","Error","Array","isArray","lists","options","fromScrumblrExport","this","createNewScrumblrExport","TrelloToScrumblrService","DEFAULT_OPTIONS","forEach","trelloCards","filter","card","idList","closed","idLists","includes","trelloCard","oldPostit","postit","pop","createPostit","trelloCardIds","map","colour","rot","x","y","sticker","trelloToScrumblrService","loadJsonFromInputFile","$refs","trelloExportInput","then","checkTrelloExport","catch","alert","scrumblrExportInput","checkScrumblrExport","generateScrumblrFromTrello","downloadAsTextFile","stringify","props","msg","String","render","__scopeId","components","TrelloToScrumblr","mount"],"mappings":"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","file":"js/app.9b4987bc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/trello-to-scrumblr/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TrelloToScrumblr.vue?vue&type=style&index=0&id=4dd4f468&scoped=true&lang=stylus\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=410b8d68&lang=stylus\"","<template>\r\n    <div>\r\n        <main>\r\n            <TrelloToScrumblr />\r\n        </main>\r\n\r\n        <footer>\r\n            Julien Maulny\r\n            -\r\n            <a href=\"https://twitter.com/alcalyn_\" target=\"_blank\">@alcalyn</a>\r\n            -\r\n            <a href=\"https://github.com/alcalyn/trello-to-scrumblr\" target=\"_blank\">See project on Github</a>\r\n        </footer>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport TrelloToScrumblr from './components/TrelloToScrumblr.vue';\r\n\r\n@Options({\r\n    components: {\r\n        TrelloToScrumblr,\r\n    },\r\n})\r\nexport default class App extends Vue {}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n#app\r\n    font-family Avenir, Helvetica, Arial, sans-serif\r\n    -webkit-font-smoothing antialiased\r\n    color #2c3e50\r\n    margin 60px auto\r\n    max-width 600px\r\n\r\nfooter\r\n    margin-top 8em\r\n    text-align center\r\n    font-size 0.7em\r\n\r\n    a\r\n        text-decoration none\r\n\r\n        &:hover\r\n            text-decoration underline\r\n</style>\r\n","<template>\r\n    <div>\r\n        <h1>Trello to Scrumblr</h1>\r\n\r\n        <section>\r\n            <h2>Import from Trello</h2>\r\n\r\n            <p>Export your Trello board as JSON, then drop it here:</p>\r\n\r\n            <input type=\"file\" ref=\"trelloExportInput\" @change=\"selectedTrelloFile\"><br>\r\n        </section>\r\n\r\n        <section v-if=\"trelloExport\">\r\n            <h2>Export to Scrumblr</h2>\r\n\r\n            <h3>Only columns</h3>\r\n            <p>\r\n                Unselect Trello columns you want to ignore (i.e \"Done\" column):\r\n            </p>\r\n            <ul>\r\n                <li v-for=\"exportList in exportLists\" :key=\"exportList.list.id\">\r\n                    <label>\r\n                        <input type=\"checkbox\" v-model=\"exportList.export\" />\r\n                        {{ exportList.list.name }} ({{ cardsInList(exportList.list).length }} cards)\r\n                    </label>\r\n                </li>\r\n            </ul>\r\n\r\n            <h3>Update Scrumblr board</h3>\r\n            <p>\r\n                <i>Ignore this if you are creating a new board.</i>\r\n                <br>\r\n                To update an already exported board using this tool,\r\n                export the Scrumblr board you want to update and drop it here:\r\n            </p>\r\n            <input type=\"file\" ref=\"scrumblrExportInput\" @change=\"selectedScrumblrFile\"><br>\r\n\r\n            <div v-if=\"scrumblrExport\">\r\n                <h3>How to handle deleted cards in Trello ?</h3>\r\n                <p>\r\n                    If you deleted some Trello cards since the last time\r\n                    you exported it to Scrumblr, how to handle obsolete post-its?\r\n                </p>\r\n                <select v-model=\"deletedCardsPolicy\">\r\n                    <option :value=\"'change-color'\">Change post-it color</option>\r\n                    <option :value=\"'delete'\">Delete post-it</option>\r\n                </select>\r\n            </div>\r\n\r\n            <br>\r\n\r\n            <button @click=\"downloadScrumblrExport\">Download Scrumblr export</button>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { webFileService } from '../services/WebFileService';\r\nimport {\r\n    TrelloList,\r\n    TrelloCard,\r\n    TrelloExport,\r\n    trelloToScrumblrService,\r\n    ExportOptions,\r\n    ScrumblrExport,\r\n} from '../services/TrelloToScrumblrService';\r\n\r\n@Options({\r\n    props: {\r\n        msg: String,\r\n    },\r\n})\r\nexport default class TrelloToScrumblr extends Vue {\r\n    trelloExport: null|TrelloExport = null;\r\n    scrumblrExport: null|ScrumblrExport = null;\r\n\r\n    exportLists: {list: TrelloList; export: boolean}[] = [];\r\n    deletedCardsPolicy: ExportOptions['deletedCardsPolicy'] = 'change-color';\r\n\r\n    selectedTrelloFile(): void {\r\n        webFileService\r\n            .loadJsonFromInputFile(this.$refs.trelloExportInput as HTMLInputElement)\r\n            .then(trelloToScrumblrService.checkTrelloExport)\r\n            .then(trelloExport => {\r\n                this.trelloExport = trelloToScrumblrService.checkTrelloExport(trelloExport);\r\n\r\n                this.exportLists = this.trelloExport.lists\r\n                    .filter(list => !list.closed)\r\n                    .map(list => ({\r\n                        list,\r\n                        export: true,\r\n                    }))\r\n                ;\r\n            })\r\n            .catch(alert)\r\n        ;\r\n    }\r\n\r\n    selectedScrumblrFile(): void {\r\n        webFileService\r\n            .loadJsonFromInputFile(this.$refs.scrumblrExportInput as HTMLInputElement)\r\n            .then(trelloToScrumblrService.checkScrumblrExport)\r\n            .then(scrumblrExport => this.scrumblrExport = scrumblrExport)\r\n            .catch(alert)\r\n        ;\r\n    }\r\n\r\n    cardsInList(list: TrelloList): TrelloCard[] {\r\n        if (!this.trelloExport) {\r\n            throw new Error('Trello export not yet loaded');\r\n        }\r\n\r\n        return this.trelloExport.cards\r\n            .filter(card => !card.closed)\r\n            .filter(card => card.idList === list.id)\r\n        ;\r\n    }\r\n\r\n    downloadScrumblrExport() {\r\n        if (null === this.trelloExport) {\r\n            throw new Error('Trello export not yet loaded');\r\n        }\r\n\r\n        const options: ExportOptions = {\r\n            idLists: this.exportLists\r\n                .filter(exportList => exportList.export)\r\n                .map(exportList => exportList.list.id)\r\n            ,\r\n            deletedCardsPolicy: this.deletedCardsPolicy,\r\n        };\r\n\r\n        const result = trelloToScrumblrService.generateScrumblrFromTrello(\r\n            this.trelloExport,\r\n            options,\r\n            this.scrumblrExport,\r\n        );\r\n\r\n        webFileService.downloadAsTextFile(\r\n            JSON.stringify(result),\r\n            'trello-to-scrumblr.json',\r\n        );\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"stylus\">\r\nh1\r\n    text-align center\r\n\r\nh2\r\n    border-bottom 1px solid rgba(0, 0, 0, 0.2)\r\n\r\nh3\r\n    margin-top 2.5em\r\n\r\nsection\r\n    margin 3em 0\r\n\r\nul\r\n    list-style-type none\r\n    padding 0\r\n\r\na\r\n    color #42b983\r\n\r\nbutton\r\n    margin 2em 0\r\n    font-size 1.5em\r\n</style>\r\n","class WebFileService {\r\n    public downloadAsTextFile(text: string, filename: string) {\r\n        const element = document.createElement('a');\r\n\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    public async loadJsonFromInputFile(fileInput: HTMLInputElement): Promise<object> {\r\n        if (!fileInput.files || 0 === fileInput.files.length) {\r\n            return Promise.reject('no file');\r\n        }\r\n\r\n        const file: File = fileInput.files[0];\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsText(file, 'UTF-8');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = evt => {\r\n                if (!evt.target) {\r\n                    reject('no event target');\r\n                    return;\r\n                }\r\n\r\n                const text = evt.target.result;\r\n\r\n                if (!text) {\r\n                    reject('no file text');\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    resolve(JSON.parse('' + text));\r\n                } catch (e) {\r\n                    reject('This file is not a Json export');\r\n                }\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nconst webFileService = new WebFileService();\r\n\r\nexport {\r\n    WebFileService,\r\n    webFileService,\r\n};\r\n","// Trello types\r\nexport type TrelloExport = {\r\n    cards: TrelloCard[];\r\n    lists: TrelloList[];\r\n};\r\n\r\nexport type TrelloCard = {\r\n    id: string;\r\n    name: string;\r\n    closed: boolean;\r\n    idList: string;\r\n};\r\n\r\nexport type TrelloList = {\r\n    id: string;\r\n    name: string;\r\n    closed: boolean;\r\n};\r\n\r\n// Scrumblr types\r\nexport type ScrumblrExport = {\r\n    cards: ScrumblrCard[];\r\n    columns: [];\r\n    theme: 'smallcards'|'bigcards';\r\n    size: {\r\n        width: number;\r\n        height: number;\r\n    };\r\n};\r\n\r\nexport type ScrumblrCard = {\r\n    id: string;\r\n    colour: 'white'|'green'|'yellow'|'blue';\r\n    rot: number;\r\n    x: number;\r\n    y: number;\r\n    text: string;\r\n    sticker: null;\r\n};\r\n\r\n// Export options\r\nexport type ExportOptions = {\r\n    // Export only these lists, null for all lists\r\n    idLists: null|string[];\r\n\r\n    // How to handle deleted Trello cards, delete to delete in Scrumblr, change-color to highlight deleted post-it\r\n    deletedCardsPolicy: 'change-color'|'delete';\r\n};\r\n\r\nclass TrelloToScrumblrService {\r\n    public static DEFAULT_OPTIONS: ExportOptions = {\r\n        idLists: null,\r\n        deletedCardsPolicy: 'change-color',\r\n    };\r\n\r\n    public createNewScrumblrExport(): ScrumblrExport {\r\n        return {\r\n            cards: [],\r\n            columns: [],\r\n            theme: 'smallcards',\r\n            size: {\r\n                width: 1110,\r\n                height: 466,\r\n            },\r\n        };\r\n    }\r\n\r\n    public checkTrelloExport(json: object): TrelloExport {\r\n        const trelloExport = json as TrelloExport;\r\n        const parseError = new Error('This file seems not to be a JSON Trello export');\r\n\r\n        if (!trelloExport.cards || !Array.isArray(trelloExport.cards)) {\r\n            throw parseError;\r\n        }\r\n\r\n        if (!trelloExport.lists || !Array.isArray(trelloExport.lists)) {\r\n            throw parseError;\r\n        }\r\n\r\n        return trelloExport;\r\n    }\r\n\r\n    public checkScrumblrExport(json: object): ScrumblrExport {\r\n        const scrumblrExport = json as ScrumblrExport;\r\n        const parseError = new Error('This file seems not to be a JSON Scrumblr export');\r\n\r\n        if (!scrumblrExport.cards || Array.isArray(!scrumblrExport.cards)) {\r\n            throw parseError;\r\n        }\r\n\r\n        if (!scrumblrExport.columns || Array.isArray(!scrumblrExport.columns)) {\r\n            throw parseError;\r\n        }\r\n\r\n        return scrumblrExport;\r\n    }\r\n\r\n    public generateScrumblrFromTrello(trelloExport: TrelloExport, options: null|ExportOptions = null, fromScrumblrExport: null|ScrumblrExport = null): ScrumblrExport {\r\n        if (null === fromScrumblrExport) {\r\n            fromScrumblrExport = this.createNewScrumblrExport();\r\n        }\r\n\r\n        if (null === options) {\r\n            options = TrelloToScrumblrService.DEFAULT_OPTIONS;\r\n        }\r\n\r\n        const scrumblrExport = fromScrumblrExport;\r\n\r\n        const lists: {[key: string]: TrelloList} = {};\r\n        trelloExport.lists.forEach(list => {\r\n            lists[list.id] = list;\r\n        });\r\n\r\n        // Remove closed cards, or cards in closed lists\r\n        let trelloCards = trelloExport.cards\r\n            .filter(card => !lists[card.idList].closed)\r\n            .filter(card => !card.closed)\r\n        ;\r\n\r\n        // Remove cards in user unwanted lists\r\n        if (null !== options.idLists) {\r\n            trelloCards = trelloCards\r\n                .filter(card => options?.idLists?.includes(card.idList))\r\n            ;\r\n        }\r\n\r\n        // Add/Update cards from Trello to Scrumblr\r\n        trelloCards.forEach(trelloCard => {\r\n            const oldPostit = scrumblrExport.cards\r\n                .filter(postit => postit.id === trelloCard.id)\r\n                .pop()\r\n            ;\r\n\r\n            // New postit: add it\r\n            if (!oldPostit) {\r\n                scrumblrExport.cards.push(this.createPostit(trelloCard.id, trelloCard.name));\r\n                return;\r\n            }\r\n\r\n            // Already existing postit: update it\r\n            oldPostit.text = trelloCard.name;\r\n        });\r\n\r\n        // Handle cards deleted in Trello but still on scrumblr\r\n        const trelloCardIds = trelloCards.map(trelloCard => trelloCard.id);\r\n\r\n        if ('delete' === options.deletedCardsPolicy) {\r\n            scrumblrExport.cards = scrumblrExport.cards\r\n                .filter(card => trelloCardIds.includes(card.id))\r\n            ;\r\n        }\r\n\r\n        if ('change-color' === options.deletedCardsPolicy) {\r\n            scrumblrExport.cards\r\n                .filter(card => !trelloCardIds.includes(card.id))\r\n                .forEach(card => card.colour = 'yellow')\r\n            ;\r\n        }\r\n\r\n        return scrumblrExport;\r\n    }\r\n\r\n    private createPostit(id: string, text: string): ScrumblrCard {\r\n        return {\r\n            id,\r\n            colour: 'blue',\r\n            rot: 0,\r\n            x: 1,\r\n            y: 1,\r\n            text,\r\n            sticker: null,\r\n        };\r\n    }\r\n}\r\n\r\nconst trelloToScrumblrService = new TrelloToScrumblrService();\r\n\r\nexport {\r\n    trelloToScrumblrService,\r\n    TrelloToScrumblrService,\r\n};\r\n","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { webFileService } from '../services/WebFileService';\r\nimport {\r\n    TrelloList,\r\n    TrelloCard,\r\n    TrelloExport,\r\n    trelloToScrumblrService,\r\n    ExportOptions,\r\n    ScrumblrExport,\r\n} from '../services/TrelloToScrumblrService';\r\n\r\n@Options({\r\n    props: {\r\n        msg: String,\r\n    },\r\n})\r\nexport default class TrelloToScrumblr extends Vue {\r\n    trelloExport: null|TrelloExport = null;\r\n    scrumblrExport: null|ScrumblrExport = null;\r\n\r\n    exportLists: {list: TrelloList; export: boolean}[] = [];\r\n    deletedCardsPolicy: ExportOptions['deletedCardsPolicy'] = 'change-color';\r\n\r\n    selectedTrelloFile(): void {\r\n        webFileService\r\n            .loadJsonFromInputFile(this.$refs.trelloExportInput as HTMLInputElement)\r\n            .then(trelloToScrumblrService.checkTrelloExport)\r\n            .then(trelloExport => {\r\n                this.trelloExport = trelloToScrumblrService.checkTrelloExport(trelloExport);\r\n\r\n                this.exportLists = this.trelloExport.lists\r\n                    .filter(list => !list.closed)\r\n                    .map(list => ({\r\n                        list,\r\n                        export: true,\r\n                    }))\r\n                ;\r\n            })\r\n            .catch(alert)\r\n        ;\r\n    }\r\n\r\n    selectedScrumblrFile(): void {\r\n        webFileService\r\n            .loadJsonFromInputFile(this.$refs.scrumblrExportInput as HTMLInputElement)\r\n            .then(trelloToScrumblrService.checkScrumblrExport)\r\n            .then(scrumblrExport => this.scrumblrExport = scrumblrExport)\r\n            .catch(alert)\r\n        ;\r\n    }\r\n\r\n    cardsInList(list: TrelloList): TrelloCard[] {\r\n        if (!this.trelloExport) {\r\n            throw new Error('Trello export not yet loaded');\r\n        }\r\n\r\n        return this.trelloExport.cards\r\n            .filter(card => !card.closed)\r\n            .filter(card => card.idList === list.id)\r\n        ;\r\n    }\r\n\r\n    downloadScrumblrExport() {\r\n        if (null === this.trelloExport) {\r\n            throw new Error('Trello export not yet loaded');\r\n        }\r\n\r\n        const options: ExportOptions = {\r\n            idLists: this.exportLists\r\n                .filter(exportList => exportList.export)\r\n                .map(exportList => exportList.list.id)\r\n            ,\r\n            deletedCardsPolicy: this.deletedCardsPolicy,\r\n        };\r\n\r\n        const result = trelloToScrumblrService.generateScrumblrFromTrello(\r\n            this.trelloExport,\r\n            options,\r\n            this.scrumblrExport,\r\n        );\r\n\r\n        webFileService.downloadAsTextFile(\r\n            JSON.stringify(result),\r\n            'trello-to-scrumblr.json',\r\n        );\r\n    }\r\n}\r\n","import { render } from \"./TrelloToScrumblr.vue?vue&type=template&id=4dd4f468&scoped=true\"\nimport script from \"./TrelloToScrumblr.vue?vue&type=script&lang=ts\"\nexport * from \"./TrelloToScrumblr.vue?vue&type=script&lang=ts\"\n\nimport \"./TrelloToScrumblr.vue?vue&type=style&index=0&id=4dd4f468&scoped=true&lang=stylus\"\nscript.render = render\nscript.__scopeId = \"data-v-4dd4f468\"\n\nexport default script","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport TrelloToScrumblr from './components/TrelloToScrumblr.vue';\r\n\r\n@Options({\r\n    components: {\r\n        TrelloToScrumblr,\r\n    },\r\n})\r\nexport default class App extends Vue {}\r\n","import { render } from \"./App.vue?vue&type=template&id=410b8d68\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=410b8d68&lang=stylus\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\n\r\ncreateApp(App).mount('#app');\r\n"],"sourceRoot":""}